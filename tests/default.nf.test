nextflow_pipeline {

    name "Test bioSIFTR pipeline main.nf"
    script "../main.nf"
    config "./nextflow.config"
    tag "pipeline"


    test("bioSIFTR running on single-end and paired-end reads. Biome human-vaginal-v1-0 default params") {
        when {
            params {
                input = "${baseDir}/tests/test_samplesheet.csv"
                biome = "human-vaginal-v1-0"
                outdir = "$outputDir"
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(
                params.outdir, 
                relative: true, 
                includeDir: true, 
                ignore: [
                    'pipeline_info/*'
                ]
            )
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore')
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // Number of tasks
                    workflow.trace.succeeded().size(),
                    // All stable path name
                    stable_name,
                    // All files with stable contents
                    stable_path,
                ).match() }
            )
        }
    }

    test("bioSIFTR running on single-end and paired-end reads. Biome human-vaginal-v1-0 with bwa, core, and dram options") {
        when {
            params {
                input = "${baseDir}/tests/test_samplesheet.csv"
                biome = "human-vaginal-v1-0"
                outdir = "$outputDir"
                run_bwa = true
                core_mode = true
                run_dram = true
            }
        }
        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(
                params.outdir, 
                relative: true, 
                includeDir: true, 
                ignore: [
                    'pipeline_info/*'
                ]
            )
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore')
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    // Number of tasks
                    workflow.trace.succeeded().size(),
                    // All stable path name
                    stable_name,
                    // All files with stable contents
                    stable_path,
                ).match() }
            )
        }
    }
}
